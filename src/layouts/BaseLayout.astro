---
import Navbar from '@components/Navbar/index.astro';

import HeadCommon from '@components/HeadCommon.astro';
import HeadSEO from '@components/HeadSEO.astro';
import Container from '@components/Container/index.astro';
import Footer from '@components/Footer/index.astro';
import Masthead from '@components/Header/Masthead';
// import PageContent from '@components/PageContent/PageContent.astro';
// import LeftSidebar from '@components/LeftSidebar/LeftSidebar.astro';
// import RightSidebar from '@components/RightSidebar/RightSidebar.astro';
import BreadCrumbs from '@components/Breadcrumbs/index';
import * as CONFIG from '../config.astro';

// import { getUser, redirectUser } from "@astro-auth/core";

// const user = getUser({ client: Astro });
// if (!user) {
//   	return redirectUser(`${CONFIG.BASE_SITE_URL}/auth`);
// } 

const { frontmatter = {} } = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const currentPage = Astro.url.pathname;
---

<html dir={frontmatter.dir ?? 'ltr'} lang={frontmatter.lang ?? 'en-us'} class="initial">
  <head>
    <HeadSEO {frontmatter} {canonicalURL} />
    <HeadCommon />
    <title>
      {frontmatter.title ? `${frontmatter.title} ðŸš€ ${CONFIG.SITE.title}` : CONFIG.SITE.title}
    </title>
    <style>
      .layout {
        display: grid;
        grid-auto-flow: column;
        grid-template-columns:
          minmax(var(--gutter), 1fr)
          minmax(0, var(--max-width))
          minmax(var(--gutter), 1fr);
        overflow-x: hidden;
        transform: translate(0);
      }
      .layout :global(> *) {
        width: 100%;
        height: 100%;
      }
      .grid-sidebar {
        position: sticky;
        top: 0;
        padding: 0;
      }
      #grid-left {
        position: fixed;
        background-color: var(--theme-bg);
        z-index: 10;
        display: none;
        height: auto !important;
      }
      #grid-main {
        padding: var(--doc-padding) var(--gutter);
        grid-column: 2;
        display: flex;
        flex-direction: column;
        height: 100%;
      }
      #grid-right {
        display: none;
      }
      :global(.mobile-sidebar-toggle) {
        overflow: hidden;
      }
      :global(.mobile-sidebar-toggle) #grid-left {
        display: block;
        top: 2rem;
      }
      @media (min-width: 50em) {
        .layout {
          overflow: initial;
          grid-template-columns:
            20rem
            minmax(0, var(--max-width));
          gap: 1em;
        }
        #grid-left {
          display: flex;
          padding-left: 2rem;
          position: sticky;
          grid-column: 1;
        }
      }

      @media (min-width: 72em) {
        .layout {
          grid-template-columns:
            20rem
            minmax(0, var(--max-width))
            18rem;
          padding-left: 0;
          padding-right: 0;
          margin: 0 auto;
        }
        #grid-right {
          grid-column: 3;
          display: flex;
        }
      }
    </style>
  </head>

  <body>
    <div class="all-markup-but-footer">
      <div class="header-container"><Masthead {currentPage} client:load client:only="react" /></div>
      <Container>
        <Navbar />

        <div style="margin-bottom: 2rem;"><BreadCrumbs location={canonicalURL} client:load /></div>
      </Container>

      <slot />
    </div>

    <!-- <Footer /> -->

    <style>
      body {
        display: flex;
        flex-direction: column;
        width: 100%;
        min-height: 100vh;
        display: grid;
        grid-template-rows: var(--theme-navbar-height) 1fr;
        --gutter: 0.5rem;
        --doc-padding: 2rem;
      }

      .header-container {
        margin-bottom: 2rem;
      }

      .all-markup-but-footer {
        flex-grow: 1;
      }
    </style>
  </body>
</html>
