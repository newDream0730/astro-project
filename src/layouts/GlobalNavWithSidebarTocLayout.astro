---
import LeftSidebar from '@components/LeftSidebar/LeftSidebar.astro';
import PageContent from '@components/PageContent/PageContent.astro';
import RightSidebar from '@components/RightSidebar/RightSidebar.astro';
import BaseLayout from './BaseLayout.astro';

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const currentPage = canonicalURL.pathname;
const { frontmatter = {}, headings } = Astro.props;
---

<BaseLayout>
  <main class="layout">
    <aside id="grid-left" class="grid-sidebar" title="Site Navigation">
      <div class="flex-column">
        <LeftSidebar currentPage={currentPage} />
      </div>
    </aside>
    <div id="grid-main">
      <PageContent {frontmatter} {headings}>
        <slot />
      </PageContent>
    </div>
    <aside id="grid-right" class="grid-sidebar" title="Table of Contents">
      <RightSidebar {headings} />
    </aside>
  </main>

  <style>
    .layout {
      display: grid;
      grid-auto-flow: column;
      grid-template-columns:
        minmax(var(--gutter), 1fr)
        minmax(0, var(--max-width))
        minmax(var(--gutter), 1fr);
      overflow-x: hidden;
      transform: translate(0);
    }

    .layout :global(> *) {
      width: 100%;
      height: 100%;
    }

    .grid-sidebar {
      position: sticky;
      top: 0;
      padding: 0;
    }
    #grid-left {
      position: fixed;
      background-color: var(--theme-bg);
      z-index: 10;
      display: none;
    }

    #grid-main {
      padding: var(--doc-padding) var(--gutter);
      grid-column: 2;
      display: flex;
      flex-direction: column;
      height: 100%;
    }

    #grid-right {
      display: none;
    }

    :global(.mobile-sidebar-toggle) {
      overflow: hidden;
    }

    :global(.mobile-sidebar-toggle) #grid-left {
      display: block;
      top: 2rem;
    }

    @media (min-width: 50em) {
      .layout {
        overflow: initial;
        grid-template-columns:
          20rem
          minmax(0, var(--max-width));
        gap: 1em;
      }
      #grid-left {
        display: flex;
        padding-left: 2rem;
        position: sticky;
        grid-column: 1;
      }
    }

    @media (min-width: 72em) {
      .layout {
        grid-template-columns:
          20rem
          minmax(0, var(--max-width))
          18rem;
        padding-left: 0;
        padding-right: 0;
        margin: 0 auto;
      }
      #grid-right {
        grid-column: 3;
        display: flex;
      }
    }
  </style>
</BaseLayout>
